{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/load .js","helpers/fileUpload.js","actions/dogAction.js","components/FormAdd.jsx","components/Home.jsx","components/NavBar.jsx","routes/AppRoute.js","reducers/dogReducer.js","store/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","types","load","uid","a","collection","get","DogStore","dogsList","forEach","hijo","push","id","data","fileUpload","file","fromData","FormData","append","fetch","method","body","resp","ok","json","cluodRes","secure_url","fileUrl","startUploading","dispatch","Swal","fire","title","text","allowOutsideClick","onBeforeOpen","showLoading","close","addNewDogs","dog","type","payload","Listar","dogList","setCards","deleteDog","clearCard","FormAdd","active","useSelector","state","activeId","useRef","formik","useFormik","initialValues","validationSchema","Yup","name","required","description","url","onSubmit","dogs","newDog","doc","set","position","icon","showConfirmButton","timer","footer","resetForm","Editdog","update","useEffect","current","useDispatch","handleFileChange","e","target","files","document","getElementById","value","values","className","src","alt","handleSubmit","onClick","querySelector","click","placeholder","disabled","onChange","handleChange","style","display","rows","search","term","x","toLowerCase","includes","Home","history","useHistory","useState","setTerm","handleDelete","delete","Delete","handleEdit","activeDog","filter","map","index","width","NavBar","to","href","AppRouter","exact","path","component","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","AppRoute"],"mappings":"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","file":"static/js/main.37c80e3c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAgoNYKhf4uA-iyNCe2TUi1PCDyj5Wxnig\",\r\n    authDomain: \"pets-b7940.firebaseapp.com\",\r\n    projectId: \"pets-b7940\",\r\n    storageBucket: \"pets-b7940.appspot.com\",\r\n    messagingSenderId: \"291360299657\",\r\n    appId: \"1:291360299657:web:a85086a9f2102218774458\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport {\r\n    db,\r\n    firebase\r\n}","\r\nexport const types ={\r\n    dogPost: '[Dog] New Dog',\r\n    dogGet: '[Dog] Load Dog',\r\n    dogUpdate: '[Dog] Update Dog',\r\n    dogDelete: '[Dog] Delete Dog',\r\n    dogActive: '[Dog] Active Dog',\r\n    LogoutClean:'[Dog] Clear Dog',\r\n}","import { db } from '../firebase/firebase-config'\r\n\r\nexport const load = async (uid) => {\r\n\r\n    const DogStore = await db.collection(`/Dog`).get()\r\n    const dogsList = [];\r\n\r\n    DogStore.forEach(hijo=>{\r\n        dogsList.push({\r\n        id:hijo.id,\r\n        ...hijo.data()\r\n       })\r\n    })\r\n   \r\n    return dogsList\r\n}\r\n\r\n","export const fileUpload = async(file) => {\r\n\r\n    const cluodUrl = 'https://api.cloudinary.com/v1_1/dfdibw2mk/image/upload'\r\n    const fromData = new FormData();\r\n    fromData.append('upload_preset', 'test-clase');\r\n    fromData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cluodUrl, {\r\n            method:'POST',\r\n            body: fromData\r\n        });\r\n\r\n        if(resp.ok){\r\n              const cluodRes = await resp.json()\r\n              return cluodRes.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n       throw error;\r\n    }\r\n \r\n}","import { db } from '../firebase/firebase-config'\r\nimport {types} from '../types/types'\r\nimport Swal from 'sweetalert2'\r\nimport {load} from '../helpers/load '\r\nimport { fileUpload } from '../helpers/fileUpload'\r\n\r\n//Crear los datos\r\nlet fileUrl = []\r\nexport const startUploading = (file) => {\r\n    return async (dispatch) => {\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait ...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n        fileUrl = await fileUpload(file)\r\n        Swal.close()\r\n       return fileUrl\r\n    }\r\n}\r\n\r\nexport const dogNew = (dogs) => {\r\n    return async (dispatch) => {\r\n      \r\n        const newDog= {\r\n            url: dogs.url,\r\n            name: dogs.name,\r\n            description: dogs.description\r\n        }\r\n\r\n        try {\r\n           await db.collection(`/Dog`).doc().set(newDog)\r\n            Swal.fire({\r\n                position: 'top-end',\r\n                text: 'Perro Creado',\r\n                icon: 'success',\r\n                title: dogs.name ,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              })\r\n        } catch (e) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: e,\r\n                footer: ''\r\n              })\r\n        }\r\n        dispatch(addNewDogs(newDog))\r\n        dispatch(Listar())\r\n\r\n    }\r\n}\r\n\r\nexport const addNewDogs = (dog ) => ({\r\n    type: types.dogPost,\r\n    payload: {\r\n        ...dog\r\n    }\r\n})\r\n\r\n//Listar los datos\r\n\r\nexport const Listar = () => {\r\n    return async (dispatch) =>{\r\n        const dogList =  await load()\r\n        dispatch(setCards(dogList))\r\n    }\r\n}\r\n\r\nexport const setCards = (dog) => {\r\n    return {\r\n        type: types.dogGet,\r\n        payload: dog\r\n    }\r\n}\r\n\r\n//Borrar\r\nexport const Delete = (id) => {\r\n    return async (dispatch) => {\r\n\r\n        await db.doc(`Dog/${id}`).delete();\r\n        dispatch(deleteDog(id));\r\n\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Delete',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n          dispatch(Listar())\r\n    }\r\n}\r\n\r\nexport const deleteDog= (id) => ({\r\n    type: types.dogDelete,\r\n    payload: id\r\n});\r\n\r\n//Editar\r\nexport const activeDog = (dog) => {\r\n    return{\r\n        type:types.dogActive,\r\n        payload:{\r\n            ...dog\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const Edit = (dog) => {\r\n    return async (dispatch) => {\r\n        \r\n        if (!dog.url) {\r\n            delete dog.url;\r\n        }\r\n\r\n        const Editdog = {\r\n            url: dog.url,\r\n            name: dog.name,\r\n            description: dog.description\r\n        }\r\n\r\n        const dogFire = { ...Editdog  }\r\n        delete dogFire.id\r\n\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait ...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n           await db.doc(`/Dog/${dog.id}`).update(Editdog)\r\n           \r\n        Swal.fire('Saved', dog.name, 'success');\r\n        dispatch(Listar())\r\n        dispatch(clearCard())\r\n    }\r\n}\r\n\r\nexport const clearCard = () => {\r\n    return {\r\n        type: types.LogoutClean\r\n    }\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {dogNew, Edit, startUploading } from '../actions/dogAction'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst FormAdd = () => {\r\n\r\n    const { active } = useSelector(state => state.dog)\r\n\r\n    const activeId = useRef(active.id)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {...active},\r\n\r\n        validationSchema: Yup.object({\r\n            name: Yup.string().required(),\r\n            description: Yup.string().required(),\r\n            url: Yup.string().required()\r\n        }),\r\n        \r\n        onSubmit: (data) => {\r\n            if (active.name === \"\") {\r\n                dispatch(dogNew(data))\r\n                formik.resetForm()\r\n            } else if (active.id !== \"\") {\r\n                dispatch(Edit(data))\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        if (active.id !== activeId.current) {\r\n            formik.resetForm()\r\n        }\r\n        activeId.current = active.id\r\n    }, [active, formik])\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = async (e) => {\r\n        if (e.target.files[0]) {\r\n            const fileUrl = await dispatch(startUploading(e.target.files[0]))\r\n            const inputFileUrl = document.getElementById(\"fileinput\")\r\n            inputFileUrl.value = fileUrl\r\n            formik.values.url = fileUrl\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"col-md-4 text-center py-3\">\r\n                <img src=\"https://res.cloudinary.com/db9wh5uvt/image/upload/v1625536708/perros_e1bfpk.png\"\r\n                    className=\"App-logo \"\r\n                    alt=\"logo\" />\r\n                <form onSubmit={formik.handleSubmit} className=\"card card-body border-primary\">\r\n\r\n                    <div className=\"form-group input-group \">\r\n\r\n                        <div\r\n                            className=\"btn border-bottom shadow-sm input-group-text bg-light\"\r\n                            value=\"Picture\"\r\n                            onClick={handlePictureClick}\r\n                        >\r\n                            <i className=\"material-icons\">insert_link</i>\r\n                        </div>\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Url\"\r\n                            name=\"url\"\r\n                            disabled\r\n                            id=\"fileinput\"\r\n                            value={formik.values.url}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                        <input\r\n                            id=\"fileSelector\"\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            style={{ display: 'none' }}\r\n\r\n                            onChange={handleFileChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-text bg-light\">\r\n                            <i className=\"material-icons\">create</i>\r\n                        </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Name\"\r\n                            className=\"form-control\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Write a Description\"\r\n                            name=\"description\"\r\n                            value={formik.values.description}\r\n                            onChange={formik.handleChange}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-dark mt-3\">Save</button>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FormAdd\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { activeDog, Delete, Listar } from '../actions/dogAction';\r\n\r\n\r\nconst search = (term) => {\r\n    return function (x) {\r\n        return x.name.toLowerCase().includes(term) || !term;\r\n    }\r\n}\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { dog } = useSelector(state => state.dog)\r\n\r\n    const [term, setTerm] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(Listar())\r\n    }, [dispatch])\r\n\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(Delete(id))\r\n    };\r\n\r\n    const handleEdit = (data) => {\r\n        dispatch(activeDog(data))\r\n        history.push(\"/edit\")\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                <div className=\"container-fluid d-flex justify-content-end\">\r\n\r\n                    <form className=\"d-flex justify-content-end\">\r\n                        <input\r\n                            className=\"form-control me-sm-2\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            name=\"term\"\r\n                            onChange={(e) => setTerm(e.target.value.toLowerCase())}\r\n                        />\r\n                        <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"d-flex flex-wrap\">\r\n            {\r\n                dog?.filter(search(term))?.map((data, index) => (\r\n                    <div className=\"col-6 col-md-4\" key={`${index}-${data.id}`}>\r\n                        <div className=\"card mb-1\" >\r\n                            <div className=\"card-body\">\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <h4>{data.name}</h4>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n                                    <p>{data.description}</p>\r\n                                    <img src={data.url}\r\n                                        alt=\"\"\r\n                                        width=\"230px\" />\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-around m-2\">\r\n                                    \r\n                                        <i \r\n                                        className=\"material-icons text-dark btn btn-danger font-weight-bold\"\r\n                                        onClick={() => handleDelete(data.id)}>\r\n                                            close\r\n                                        </i>\r\n\r\n                                        <i className=\"material-icons btn btn-success\"\r\n                                            onClick={() => handleEdit(data)}>\r\n                                            create\r\n                                        </i>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"container-fluid\">\r\n                <Link to=\"/\" className=\"navbar-brand\" href=\"#\">Pets</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                    <ul className=\"navbar-nav me-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link active\" href=\"#\">Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/edit\" className=\"nav-link\" href=\"#\">Edit</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n    Route\r\n} from 'react-router-dom'\r\nimport FormAdd from '../components/FormAdd'\r\nimport Home from '../components/Home'\r\nimport NavBar from '../components/NavBar'\r\nimport 'bootswatch/dist/united/bootstrap.min.css'\r\n\r\nconst AppRouter = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/edit\" component={FormAdd} />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n    dog: [],\r\n    active: {\r\n        url: '',\r\n        name: '',\r\n        description: ''\r\n    }\r\n}\r\n\r\nexport const dogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.dogPost:\r\n            return {\r\n                ...state,\r\n                dog: [action.payload, ...state.dog]\r\n            }\r\n        case types.dogGet:\r\n            return {\r\n                ...state,\r\n                dog: [...action.payload]\r\n            }\r\n\r\n        case types.dogActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.LogoutClean:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    url: '',\r\n                    name: '',\r\n                    description: ''\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware,compose, combineReducers} from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport {dogReducer} from '../reducers/dogReducer'\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducer = combineReducers({\r\n  dog:dogReducer,\r\n  \r\n})\r\n\r\nexport const store = createStore(\r\n reducer,\r\n composeEnhancers(\r\n   applyMiddleware(thunk)\r\n )\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport AppRouter from './routes/AppRoute';\r\nimport { store } from './store/store';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}